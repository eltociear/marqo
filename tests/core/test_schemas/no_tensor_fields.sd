schema my_index {
    document my_index {
        field marqo__lexical_title type string {
            indexing: index | summary
            index: enable-bm25
        }
        field description type string {
           indexing: summary
        }
        field price type float {
            indexing: summary
        }
        field marqo__score_modifiers type tensor<float>(p{}) {
            indexing: attribute
        }
    }

    rank-profile bm25 inherits default {
        first-phase {
            expression: bm25(marqo__lexical_title)
        }
    }
    rank-profile modifiers inherits default {
        inputs {
            query(mult_weights)  tensor<float>(p{})
            query(add_weights)  tensor<float>(p{})
        }
        function modify(score) {
            expression: if (count(query(mult_weights)) == 0, 1, reduce(query(mult_weights) * attribute(marqo__score_modifiers), prod)) * score + reduce(query(add_weights) * attribute(marqo__score_modifiers), sum)
        }
    }
    rank-profile bm25_modifiers inherits modifiers {
        first-phase {
            expression: modify(bm25(marqo__lexical_title))
        }
    }

    fieldset default {
        fields: marqo__lexical_title
    }

    document-summary all-non-vector-summary {
        summary title type string { source: marqo__lexical_title }
        summary description type string { source: description }
        summary price type float { source: price }
    }
    document-summary all-vector-summary {
        summary title type string { source: marqo__lexical_title }
        summary description type string { source: description }
        summary price type float { source: price }
    }
}
